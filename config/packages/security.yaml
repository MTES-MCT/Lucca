# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

#    encoders:
#        FOS\UserBundle\Model\UserInterface: bcrypt
    
    role_hierarchy:
        ROLE_VISU: [ ROLE_MEDIA_READ, ROLE_USER ]
        ROLE_LUCCA: [ ROLE_VISU, ROLE_USER ]
        ROLE_ADMIN: [ ROLE_USER, ROLE_LUCCA, ROLE_VISU, ROLE_MEDIA_TOTAL ]
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_LUCCA, ROLE_ADMIN, ROLE_FOLDER_OPEN, ROLE_DELETE_FOLDER ]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        fos_userbundle:
            id: fos_user.user_provider.username_email

    # https://symfony.com/doc/current/security.html#c-encoding-passwords
    password_hashers:
        # auto hasher with default options for the User class (and children)
        Lucca\Bundle\UserBundle\Entity\User: 'auto'

        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Declare the main firewall and override configuration for each environment
        main:
            pattern: ^/

#            guard:
#                authenticators:
#                    - lucca.security.login_form_authenticator

            form_login:
                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                remember_me: true
                default_target_path: lucca_core_dashboard

            logout: true
#            anonymous: true
#            logout_on_user_change: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        ## Anonymous access
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/back-office/media/manager/file/(.+), role: IS_AUTHENTICATED_ANONYMOUSLY }

        ## Admin access
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/back-office/, role: ROLE_USER }

